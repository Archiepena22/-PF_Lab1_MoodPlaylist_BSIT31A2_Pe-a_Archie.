@model MoodPlaylistGenerator.ViewModels.PlaylistDetailViewModel
@{
    ViewData["Title"] = Model.Playlist.Name;
}

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <div>
                    <h3>ðŸŽ§ @Model.Playlist.Name</h3>
                    <span class="badge rounded-pill me-2" 
                          style="background-color: @Model.Playlist.Mood?.Color; color: white;">
                        @Model.Playlist.Mood?.Name
                    </span>
                </div>
                @if (Model.CanEdit)
                {
                    <div class="btn-group">
                        <button class="btn btn-outline-secondary btn-sm" data-bs-toggle="modal" data-bs-target="#editNameModal">
                            <i class="fas fa-edit"></i> Rename
                        </button>
                        <form method="post" asp-action="Delete" asp-route-id="@Model.Playlist.Id" 
                              style="display: inline;" 
                              onsubmit="return confirm('Are you sure you want to delete this playlist?');">
                            <button type="submit" class="btn btn-outline-danger btn-sm">
                                <i class="fas fa-trash"></i> Delete
                            </button>
                        </form>
                    </div>
                }
            </div>
            <div class="card-body">
                <div class="row mb-3">
                    <div class="col-sm-3"><strong>Generated:</strong></div>
                    <div class="col-sm-9">@Model.Playlist.GeneratedAt.ToString("MMMM dd, yyyy 'at' h:mm tt")</div>
                </div>
                
                <div class="row mb-3">
                    <div class="col-sm-3"><strong>Mood:</strong></div>
                    <div class="col-sm-9">
                        <span class="badge rounded-pill me-2" 
                              style="background-color: @Model.Playlist.Mood?.Color; color: white;">
                            @Model.Playlist.Mood?.Name
                        </span>
                        <br>
                        <small class="text-muted">@Model.Playlist.Mood?.Description</small>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-sm-3"><strong>Total Songs:</strong></div>
                    <div class="col-sm-9">@Model.Songs.Count songs</div>
                </div>
            </div>
        </div>

        <!-- Songs List -->
        @if (Model.Songs.Any())
        {
            <div class="card mt-4">
                <div class="card-header">
                    <h5>ðŸŽµ Songs in this Playlist</h5>
                </div>
                <div class="card-body p-0">
                    <div class="list-group list-group-flush">
                        @foreach (var playlistSong in Model.Songs.OrderBy(s => s.Position))
                        {
                            <div class="list-group-item">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div class="d-flex align-items-center">
                                        <span class="badge bg-secondary rounded-circle me-3">@playlistSong.Position</span>
                                        <div>
                                            <h6 class="mb-1">@playlistSong.Song.Title</h6>
                                            <p class="mb-1 text-muted">by @playlistSong.Song.Artist</p>
                                            <div>
                                                @foreach (var songMood in playlistSong.Song.SongMoods)
                                                {
                                                    <span class="badge rounded-pill me-1" 
                                                          style="background-color: @songMood.Mood.Color; color: white; font-size: 0.75em;">
                                                        @songMood.Mood.Name
                                                    </span>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="btn-group-vertical">
                                        <button class="btn btn-outline-primary btn-sm" 
                                                onclick="playSong('@Html.Raw(playlistSong.Song.YouTubeUrl)', '@Html.Raw(playlistSong.Song.Title)', '@Html.Raw(playlistSong.Song.Artist)')">
                                            <i class="fas fa-play"></i> Play
                                        </button>
                                        <a href="@playlistSong.Song.YouTubeUrl" target="_blank" 
                                           class="btn btn-outline-secondary btn-sm">
                                            <i class="fas fa-external-link-alt"></i> YouTube
                                        </a>
                                        <a href="@Url.Action("Details", "Songs", new { id = playlistSong.Song.Id })" 
                                           class="btn btn-outline-secondary btn-sm">
                                            <i class="fas fa-info"></i> Details
                                        </a>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
    
    <div class="col-md-4">
        <!-- YouTube Player -->
        <div class="card" id="playerCard" style="display: none;">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5>ðŸŽµ Now Playing</h5>
                <button class="btn btn-sm btn-outline-secondary" onclick="closePlayer()">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="card-body p-0">
                <div class="ratio ratio-16x9">
                    <iframe id="youtubePlayer" 
                            src="" 
                            title="YouTube video player" 
                            frameborder="0" 
                            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" 
                            allowfullscreen>
                    </iframe>
                </div>
                <div class="p-3">
                    <h6 id="currentSongTitle" class="mb-1"></h6>
                    <p id="currentSongArtist" class="text-muted mb-0"></p>
                </div>
            </div>
        </div>

        <!-- Quick Actions -->
        <div class="card" id="quickActionsCard">
            <div class="card-header">
                <h5>ðŸŽ¯ Quick Actions</h5>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <a href="@Url.Action("Generate")" class="btn btn-primary">
                        <i class="fas fa-magic"></i> Generate Another Playlist
                    </a>
                    <a href="@Url.Action("Index", "Songs")" class="btn btn-outline-secondary">
                        <i class="fas fa-music"></i> View All Songs
                    </a>
                    <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                        <i class="fas fa-list"></i> Back to Playlists
                    </a>
                </div>
            </div>
        </div>

        <!-- Mood Info -->
        @if (Model.Playlist.Mood != null)
        {
            <div class="card mt-3">
                <div class="card-header">
                    <h5>ðŸŽ­ About This Mood</h5>
                </div>
                <div class="card-body">
                    <div class="text-center mb-3">
                        <span class="badge rounded-pill" 
                              style="background-color: @Model.Playlist.Mood.Color; color: white; font-size: 1.2em; padding: 0.5em 1em;">
                            @Model.Playlist.Mood.Name
                        </span>
                    </div>
                    <p class="text-muted">@Model.Playlist.Mood.Description</p>
                </div>
            </div>
        }
    </div>
</div>

<!-- Edit Name Modal -->
<div class="modal fade" id="editNameModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="UpdateName">
                <div class="modal-header">
                    <h5 class="modal-title">Rename Playlist</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="PlaylistId" value="@Model.Playlist.Id" />
                    <div class="mb-3">
                        <label for="playlistName" class="form-label">Playlist Name</label>
                        <input type="text" class="form-control" id="playlistName" name="Name" 
                               value="@Model.Playlist.Name" required maxlength="100" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>
